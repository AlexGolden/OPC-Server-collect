<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gf/wJxhf+CY+D/wM/w/+AfAP/4AAT//gAf8=
</value>
  </data>
</root>